# -*- coding: utf-8 -*-
"""1116021HW1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mt1h34h_ZeT5HKg4e5iLlh6kUaPdNeCW
"""

!pip install matplotlib

! pip install opencv-python

!pip install numpy

import numpy as np
import matplotlib.pyplot as plt

olho = plt.imread('yzu.png')
olho_verde = olho[:, :, 1]

teste = np.copy(olho_verde)

if teste.dtype == np.uint16:
    depth = 65536
else:
    depth = 256

height, width = teste.shape

incidencia = np.zeros((teste.size))
ocorrencia = np.zeros(depth)
k = 0
for i in range(height):
    for j in range(width):
        incidencia[k] = teste[i, j]
        k = k + 1
count = 0

for j in range(len(incidencia)):
    ocorrencia[int(incidencia[j])] += 1

acumulado = np.zeros(depth)
count = 0
for i in range(depth):
    count += ocorrencia[i]
    acumulado[i] = count

constante = (depth-1) / (height * width)

for i in range(depth):
    acumulado[i] = round(acumulado[i] * constante, 0)

equaliza = np.copy(olho_verde)
i1, j1 = np.nonzero(equaliza)

for j in range(len(i1)):
    equaliza[i1[j], j1[j]] = acumulado[int(equaliza[i1[j], j1[j]])]

equaliza = equaliza.astype("uint8")
equaliza = np.stack((equaliza,) * 3, axis=-1)

plt.imshow(equaliza)
plt.show()

import numpy as np
import cv2 as cv
from matplotlib import pyplot as plt
img = cv.imread('d.jfif',0)
hist,bins = np.histogram(img.flatten(),256,[0,256])
cdf = hist.cumsum()
cdf_normalized = cdf * float(hist.max()) / cdf.max()
plt.plot(cdf_normalized, color = 'b')
plt.hist(img.flatten(),256,[0,256], color = 'r')
plt.xlim([0,256])
plt.legend(('cdf','histogram'), loc = 'upper left')
plt.show()

cdf_m = np.ma.masked_equal(cdf,0)
cdf_m = (cdf_m - cdf_m.min())*255/(cdf_m.max()-cdf_m.min())
cdf = np.ma.filled(cdf_m,0).astype('uint8')

img2 = cdf[img]

img = cv.imread('d.jfif',0)
equ = cv.equalizeHist(img)
res = np.hstack((img,equ)) #stacking images side-by-side
cv.imwrite('Res1.png',res)

img = cv.imread('Res1.png',0)
hist,bins = np.histogram(img.flatten(),256,[0,256])
cdf = hist.cumsum()
cdf_normalized = cdf * float(hist.max()) / cdf.max()
plt.plot(cdf_normalized, color = 'b')
plt.hist(img.flatten(),256,[0,256], color = 'r')
plt.xlim([0,256])
plt.legend(('cdf','histogram'), loc = 'upper left')
plt.show()